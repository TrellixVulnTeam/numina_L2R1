name: Build wheels and upload to PyPI
on:
  workflow_dispatch

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      # we could use this also
      # python -m pep517.build --source .
      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          name: numina-wheels
          path: ./dist/*.tar.gz

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-latest]
    steps:
      - uses: actions/checkout@v2
        
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'
          
      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==1.5.5 
      
      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_SKIP: pp*
          
      - uses: actions/upload-artifact@v2
        with:
          name: numina-wheels
          path: ./wheelhouse/*.whl
        
  upload_pypi:
    needs: [build_sdist, build_wheels]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    #if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: numina-wheels
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.test_pypi_password }}
          repository_url: https://test.pypi.org/legacy/

